import { fileURLToPath, URL } from "node:url";
import { VitePWA } from 'vite-plugin-pwa';

import { defineConfig, loadEnv } from 'vite'
import vue from "@vitejs/plugin-vue";

// https://vitejs.dev/config/
export default defineConfig(({ command, mode }) => {
  console.info("mode", mode)
  console.info("process.cwd", process.cwd())
  console.info("process.env", process.env)
  const env = loadEnv(mode, process.cwd(), '')
  return {
    plugins: [
      vue(),
      VitePWA({
        registerType: 'autoUpdate',
        includeAssets: ['favicon.ico', 'apple-touch-icon.png', 'safari-pinned-tab.svg'],
        manifest: {
          name: 'اليومية العصرية',
          short_name: 'اليومية العصرية',
          description: 'اليومية العصرية للحاج بوعياد هي يومية من التراث المغربي تحتوي على مجموعة من الاحاديث والآيات القرآنية اضافة الى فوائد طبية وأقوال مأثورة',
          theme_color: '#ffffff',
          icons: [
            {
              src: 'android-chrome-192x192.png',
              sizes: '192x192',
              type: 'image/png'
            },
            {
              src: 'android-chrome-512x512.png',
              sizes: '512x512',
              type: 'image/png'
            },
            {
              src: 'android-chrome-512x512.png',
              sizes: '512x512',
              type: 'image/png',
              purpose: 'any maskable'
            }
          ]
        },
        workbox: {
          globPatterns: ['**/*.{js,css,html,ico,png,svg}']
        },
        devOptions: {
          enabled: true
        }
      }),
    ],
    define: {
      __APP_ENV__: JSON.stringify(env.APP_ENV),
      "process.dev": true,
      "import.meta.dev": true,
      "process.test": false,
      "import.meta.test": false
    },
    runtimeConfig: {
      // apiKey: '', // Default to an empty string, automatically set at runtime using process.env.NUXT_API_KEY
      // public: {
      //   baseURL: 'https://baaaaaseurl.io' // Exposed to the frontend as well.
      // }
    },
    resolve: {
      alias: {
        "@": fileURLToPath(new URL("./src", import.meta.url)),
      },
    },
  }
});
